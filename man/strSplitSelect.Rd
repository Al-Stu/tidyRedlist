% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tidyNames.R
\name{strSplitSelect}
\alias{strSplitSelect}
\title{Selects element from \code{\link{stringr::str_split}} list}
\usage{
strSplitSelect(x, pattern, n)
}
\arguments{
\item{pattern}{Pattern to look for.

The default interpretation is a regular expression, as described
in \link[stringi:stringi-search-regex]{stringi::stringi-search-regex}. Control options with
\code{\link[stringr:regex]{regex()}}.

Match a fixed string (i.e. by comparing only bytes), using
\code{\link[stringr:fixed]{fixed()}}. This is fast, but approximate. Generally,
for matching human text, you'll want \code{\link[stringr:coll]{coll()}} which
respects character matching rules for the specified locale.

Match character, word, line and sentence boundaries with
\code{\link[stringr:boundary]{boundary()}}. An empty pattern, "", is equivalent to
\code{boundary("character")}.}

\item{n}{the element you wish to keep, e.g. 1 to keep first element}
}
\value{
vector with \code{n}th position of each split string
}
\description{
Selects element from \code{\link{stringr::str_split}} list
}
\section{Used in}{
 \code{\link{tidySynonyms}}
}

\examples{
strSplitSelect(species_data[['synonyms']])
}
